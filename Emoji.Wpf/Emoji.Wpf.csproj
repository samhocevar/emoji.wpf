<Project Sdk="Microsoft.NET.Sdk.WindowsDesktop">
  <PropertyGroup>
    <Title>Emoji.Wpf</Title>
    <Product>Emoji.Wpf</Product>
    <Authors>Sam Hocevar</Authors>
    <Copyright>Copyright © 2017–2023 Sam Hocevar</Copyright>
    <Description>Emoji rendering for WPF applications (experimental BBCode branch)</Description>
    <PackageId>Emoji.Wpf.BBCode</PackageId>
    <PackageLicenseExpression>WTFPL</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/samhocevar/emoji.wpf</PackageProjectUrl>
    <PackageIcon>icon.png</PackageIcon>
    <PackageTags>Emoji Unicode WPF XAML</PackageTags>
    <OutputType>Library</OutputType>
    <TargetFrameworks>net40;netcoreapp3.1</TargetFrameworks>
    <GenerateAssemblyFileVersionAttribute>false</GenerateAssemblyFileVersionAttribute>
    <GenerateAssemblyInformationalVersionAttribute>false</GenerateAssemblyInformationalVersionAttribute>
    <GenerateAssemblyVersionAttribute>false</GenerateAssemblyVersionAttribute>
    <UseWPF>true</UseWPF>
    <DefaultItemExcludes>
        $(DefaultItemExcludes);gitversion.json;**\*.swp;**\*~;
        UnicodeCLDR\**;UnicodeEmoji\**
    </DefaultItemExcludes>

    <!--Remove this section when https://github.com/nuget/home/issues/3891 is resolved -->
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>
  <UsingTask TaskName="GZipTask" TaskFactory="CodeTaskFactory"
             AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <InputFile ParameterType="System.String" Required="true" />
      <OutputFile ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.IO.Compression" />
      <Using Namespace="System.IO.Compression" />
      <Code Type="Fragment" Language="cs"><![CDATA[
          Directory.CreateDirectory(Path.GetDirectoryName(OutputFile));
          var data = File.ReadAllBytes(InputFile);
          using (var s = new FileStream(OutputFile, FileMode.Create))
              using (var gs = new GZipStream(s, CompressionMode.Compress, false))
                  gs.Write(data, 0, data.Length);
      ]]></Code>
    </Task>
  </UsingTask>
  <Target Name="CompressResources" BeforeTargets="BeforeBuild"
          Inputs="UnicodeEmoji\emoji-test.txt"
          Outputs="$(OutputPath)\emoji-test.txt.gz">
    <GZipTask InputFile="UnicodeEmoji\emoji-test.txt"
              OutputFile="$(OutputPath)\emoji-test.txt.gz" />
  </Target>
  <ItemGroup>
    <None Include="..\Resources\icon.png" Pack="true" PackagePath="" />
    <None Include="UnicodeEmoji\emoji-test.txt" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="WinFonts\webdings.txt" LogicalName="webdings.txt" />
    <EmbeddedResource Include="WinFonts\wingdings.txt" LogicalName="wingdings.txt" />
    <EmbeddedResource Include="$(OutputPath)\emoji-test.txt.gz" LogicalName="emoji-test.txt.gz" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="**\*.hlsl" />
    <HLSLShader Include="**\*.hlsl">
      <ShaderProfile>ps_3_0</ShaderProfile>
      <ObjectFileOutput>$(OutputPath)\$([System.IO.Path]::GetFileNameWithoutExtension('%(Identity)')).ps</ObjectFileOutput>
    </HLSLShader>
    <EmbeddedResource Include="$(OutputPath)\*.ps" LogicalName="$([System.IO.Path]::GetFileName('%(Identity)'))" Visible="False" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="GitVersion.MsBuild" Version="5.6.6" PrivateAssets="all">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="JeremyAnsel.HLSL.Targets" Version="2.0.16" />
    <PackageReference Include="Stfu" Version="0.1.7" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Typography\Build\N20\Typography.GlyphLayout\Typography.GlyphLayout.csproj" PrivateAssets="all" />
    <ProjectReference Include="..\Typography\Build\N20\Typography.OpenFont\Typography.OpenFont.csproj" PrivateAssets="all" />
  </ItemGroup>

  <!--Remove this section when https://github.com/nuget/home/issues/3891 is resolved -->
  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
    <ItemGroup>
    <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')-&gt;WithMetadataValue('PrivateAssets', 'All'))" />
    </ItemGroup>
  </Target>

</Project>
